
package Dental;

import java.awt.Toolkit;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import java.text.NumberFormat;

/**
 *************************************************************
 *Comments by prof.
 *
 *************************************************************
 * File name:   DentalGUI.java
 * @author:     Niko Culevski
 * Created on:  April 29, 2005, 9:14 AM
 * @version:    1.1
 * Platform:    PC, Windows XP, Netbeans 6.8, jdk 1.6_14
 * @see javax.swing.JFrame
 * @see java.text.NumberFormat
 * @see java.io
 *************************************************************
 * <b>
 * This program calculates the bill for a patient at
 * dentist's office. Services provided are given with
 * check boxes with appropriate fees. Other check box
 * allows user to specify other fees. Billing for all
 * patients is saved to an external file Billing.txt.
 * Patients are read from an external file Patients.txt
 * </b>
 *************************************************************
 * Input:   Patient's names from Patients.txt
 * Output:  Bill for individual patient.
 *************************************************************
 * Comments by student
 * File name:   DentalGUI.java
 * @author:     Natnael Tezera
 * Created on:  2013, 9:14 AM
 * @version:    1.2
 * Platform:    PC, Windows XP, Netbeans 6.8, jdk 1.6_14
 * @see javax.swing.JFrame
 * @see java.text.NumberFormat
 * @see java.io
 *************************************************************
 */
public class DentalGUI extends javax.swing.JFrame 
{

    StringBuffer display = new StringBuffer();
    /**
     * Default constructor--creates new form DentalGUI
     */
    public DentalGUI() 
    {
        initComponents();
        //Set icon for the form
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/Dental/okay.gif"));
        
        //Set the Calculate button as default
        this.getRootPane().setDefaultButton(calculateJButton);
        
        
        //open it the GUI in the center
        this.setLocationRelativeTo(null);
        
        //Call a method to read customers from an external file and
        //to populate the patients combobox, but first empty it
        patientJComboBox.removeAllItems();
        readPatientsFile();       
        
        
    }
    
    /**Need Javadocs for this method
     * 
     */
    private void readPatientsFile()
    {
        String fileName = "src/Dental/Patients.txt",
               patientName;
        try
        {
            FileReader fReader = new FileReader(fileName);
            BufferedReader inputFile = new BufferedReader(fReader);
            
            //Read first line and process
            patientName = inputFile.readLine();
            
            //Add patient names inside the combobox
            while(patientName != null)
            {
                patientJComboBox.addItem(patientName);
                patientName = inputFile.readLine();                
            }
        }
        catch(FileNotFoundException exp)
        {
            exp.printStackTrace();
        }
        catch(IOException exp)
        {
            exp.printStackTrace();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientJPanel = new javax.swing.JPanel();
        patientJLabel = new javax.swing.JLabel();
        patientJComboBox = new javax.swing.JComboBox();
        servicesJPanel = new javax.swing.JPanel();
        cleaningJCheckBox = new javax.swing.JCheckBox();
        cleaningJLabel = new javax.swing.JLabel();
        cavityJCheckBox = new javax.swing.JCheckBox();
        cavityJLabel = new javax.swing.JLabel();
        xrayJCheckBox = new javax.swing.JCheckBox();
        xrayJLabel = new javax.swing.JLabel();
        fluorideJCheckBox = new javax.swing.JCheckBox();
        fluorideJLabel = new javax.swing.JLabel();
        rootJCheckBox = new javax.swing.JCheckBox();
        rootJLabel = new javax.swing.JLabel();
        otherJCheckBox = new javax.swing.JCheckBox();
        otherJTextField = new javax.swing.JTextField();
        totalJLabel = new javax.swing.JLabel();
        totalJTextField = new javax.swing.JTextField();
        displayJPanel = new javax.swing.JPanel();
        displayJScrollPane = new javax.swing.JScrollPane();
        outJTextArea = new javax.swing.JTextArea();
        controlJPanel = new javax.swing.JPanel();
        calculateJButton = new javax.swing.JButton();
        saveJButton = new javax.swing.JButton();
        clearJButton = new javax.swing.JButton();
        quitJButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        clearJMenuItem = new javax.swing.JMenuItem();
        fileJSeparator = new javax.swing.JPopupMenu.Separator();
        printJMenuItem = new javax.swing.JMenuItem();
        printJMenuItem1 = new javax.swing.JMenuItem();
        quitJMenuItem = new javax.swing.JMenuItem();
        helpJMenu = new javax.swing.JMenu();
        aboutJMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dental Application");
        setResizable(false);

        patientJPanel.setToolTipText("");

        patientJLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        patientJLabel.setText("Patient Name:");
        patientJPanel.add(patientJLabel);

        patientJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Captain Spiff", "Nate The Great", "Kahte Patel", "Alexander the Great" }));
        patientJPanel.add(patientJComboBox);

        getContentPane().add(patientJPanel, java.awt.BorderLayout.PAGE_START);

        servicesJPanel.setLayout(new java.awt.GridLayout(7, 2, 3, 3));

        cleaningJCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cleaningJCheckBox.setSelected(true);
        cleaningJCheckBox.setText("Cleaning");
        cleaningJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleaningJCheckBoxActionPerformed(evt);
            }
        });
        servicesJPanel.add(cleaningJCheckBox);

        cleaningJLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cleaningJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cleaningJLabel.setText("$35");
        servicesJPanel.add(cleaningJLabel);

        cavityJCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cavityJCheckBox.setText("Cavity");
        servicesJPanel.add(cavityJCheckBox);

        cavityJLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cavityJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cavityJLabel.setText("$150");
        servicesJPanel.add(cavityJLabel);

        xrayJCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        xrayJCheckBox.setText("X-Ray");
        servicesJPanel.add(xrayJCheckBox);

        xrayJLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        xrayJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xrayJLabel.setText("$85");
        servicesJPanel.add(xrayJLabel);

        fluorideJCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fluorideJCheckBox.setText("Fluoride");
        fluorideJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fluorideJCheckBoxActionPerformed(evt);
            }
        });
        servicesJPanel.add(fluorideJCheckBox);

        fluorideJLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fluorideJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fluorideJLabel.setText("$50");
        servicesJPanel.add(fluorideJLabel);

        rootJCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rootJCheckBox.setText("Root Canal");
        rootJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rootJCheckBoxActionPerformed(evt);
            }
        });
        servicesJPanel.add(rootJCheckBox);

        rootJLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rootJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rootJLabel.setText("$225");
        servicesJPanel.add(rootJLabel);

        otherJCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        otherJCheckBox.setText("Other");
        otherJCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherJCheckBoxActionPerformed(evt);
            }
        });
        servicesJPanel.add(otherJCheckBox);

        otherJTextField.setEditable(false);
        otherJTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        otherJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        otherJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherJTextFieldActionPerformed(evt);
            }
        });
        servicesJPanel.add(otherJTextField);

        totalJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        totalJLabel.setText("Total ");
        servicesJPanel.add(totalJLabel);

        totalJTextField.setEditable(false);
        totalJTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        totalJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalJTextFieldActionPerformed(evt);
            }
        });
        servicesJPanel.add(totalJTextField);

        getContentPane().add(servicesJPanel, java.awt.BorderLayout.WEST);

        outJTextArea.setEditable(false);
        outJTextArea.setColumns(20);
        outJTextArea.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        outJTextArea.setRows(5);
        displayJScrollPane.setViewportView(outJTextArea);

        javax.swing.GroupLayout displayJPanelLayout = new javax.swing.GroupLayout(displayJPanel);
        displayJPanel.setLayout(displayJPanelLayout);
        displayJPanelLayout.setHorizontalGroup(
            displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addContainerGap())
        );
        displayJPanelLayout.setVerticalGroup(
            displayJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayJScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(displayJPanel, java.awt.BorderLayout.CENTER);

        controlJPanel.setLayout(new java.awt.GridLayout(2, 2));

        calculateJButton.setBackground(new java.awt.Color(255, 255, 204));
        calculateJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        calculateJButton.setMnemonic('C');
        calculateJButton.setText("Calculate");
        calculateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(calculateJButton);

        saveJButton.setBackground(new java.awt.Color(255, 255, 204));
        saveJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveJButton.setMnemonic('S');
        saveJButton.setText("Save");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(saveJButton);

        clearJButton.setBackground(new java.awt.Color(255, 255, 204));
        clearJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clearJButton.setMnemonic('r');
        clearJButton.setText("Clear");
        clearJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(clearJButton);

        quitJButton.setBackground(new java.awt.Color(255, 255, 204));
        quitJButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        quitJButton.setMnemonic('Q');
        quitJButton.setText("Quit");
        quitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJButtonActionPerformed(evt);
            }
        });
        controlJPanel.add(quitJButton);

        getContentPane().add(controlJPanel, java.awt.BorderLayout.SOUTH);

        fileJMenu.setMnemonic('F');
        fileJMenu.setText("File");

        clearJMenuItem.setMnemonic('r');
        clearJMenuItem.setText("Clear");
        clearJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(clearJMenuItem);
        fileJMenu.add(fileJSeparator);

        printJMenuItem.setMnemonic('P');
        printJMenuItem.setText("Print");
        printJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(printJMenuItem);

        printJMenuItem1.setMnemonic('P');
        printJMenuItem1.setText("PrintGUI");
        printJMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printJMenuItem1ActionPerformed(evt);
            }
        });
        fileJMenu.add(printJMenuItem1);

        quitJMenuItem.setMnemonic('Q');
        quitJMenuItem.setText("Quit");
        quitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(quitJMenuItem);

        jMenuBar1.add(fileJMenu);

        helpJMenu.setMnemonic('H');
        helpJMenu.setText("Help");

        aboutJMenuItem1.setMnemonic('A');
        aboutJMenuItem1.setText("About");
        aboutJMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutJMenuItem1ActionPerformed(evt);
            }
        });
        helpJMenu.add(aboutJMenuItem1);

        jMenuBar1.add(helpJMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calculateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateJButtonActionPerformed
       // Calculate the bill for specified patient
       final double MAX_OTHER = 10000.0;    // maximum fee for other
       double total = 0.0;                  // sum of all services provided
       // specify display format
       //NumberFormat dollars = NumberFormat.getCurrancy
       DecimalFormat dollars = new DecimalFormat("$#,###0.00");
     
       String patient = patientJComboBox.getSelectedItem().toString();
       
       // display error message if no name entered or no box selected
      if ( ( patient.equals( "" ) ) || 
           ( !cleaningJCheckBox.isSelected() && 
           !cavityJCheckBox.isSelected() &&
           !xrayJCheckBox.isSelected() && 
           !fluorideJCheckBox.isSelected() &&
           !rootJCheckBox.isSelected() &&
           !otherJCheckBox.isSelected() ) 
         )
      {
         // display error message
         JOptionPane.showMessageDialog( null,
            "Please enter a name and check at least one item.",
            "Missing Information", JOptionPane.WARNING_MESSAGE );
      }
      else
      {
          try
          {
            double otherAmount = otherJCheckBox.isSelected() ?
                    Double.parseDouble(otherJTextField.getText()) : 0.0;
            if (otherJCheckBox.isSelected()&&
                    (otherAmount <= 0.0 || otherAmount > MAX_OTHER))
                throw new NumberFormatException();
            
            Dentalbill myBill = new Dentalbill(patient,cleaningJCheckBox.isSelected(), 
                cavityJCheckBox.isSelected(), xrayJCheckBox.isSelected(), 
                fluorideJCheckBox.isSelected(), rootJCheckBox.isSelected(),
                otherJCheckBox.isSelected(), otherAmount);
            

            total = myBill.calculateBill();  
            totalJTextField.setText(dollars.format(total));
            display = myBill.displayBill();

            outJTextArea.setText(display.toString());
            StringBuffer display = new StringBuffer();
          }
          catch (NumberFormatException nume)
          {
              JOptionPane.showMessageDialog(null,
                      "please enter a postive number then" + 
                      dollars.format(MAX_OTHER)+ "."); 
           }
      }
      
    }//GEN-LAST:event_calculateJButtonActionPerformed

    private void clearJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJButtonActionPerformed
        // TODO add your handling code here:
        cleaningJCheckBox.setSelected(true);
        cavityJCheckBox.setSelected(false);
        xrayJCheckBox.setSelected(false);
        fluorideJCheckBox.setSelected(false);
        rootJCheckBox.setSelected(false);
        otherJTextField.setText("");
        otherJCheckBox.setSelected(false);
        outJTextArea.setText("");
        totalJTextField.setText("");
        
        
    }//GEN-LAST:event_clearJButtonActionPerformed

    private void otherJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otherJTextFieldActionPerformed

    private void quitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_quitJButtonActionPerformed

    private void clearJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJMenuItemActionPerformed
        // TODO add your handling code here:
        clearJButtonActionPerformed(evt);
        
    }//GEN-LAST:event_clearJMenuItemActionPerformed

    private void aboutJMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutJMenuItem1ActionPerformed
        // TODO add your handling code here:
        About myabout = new About(); 
        myabout.setVisible(true);
        
    }//GEN-LAST:event_aboutJMenuItem1ActionPerformed

    private void printJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printJMenuItemActionPerformed
        // TODO add your handling code here:
        //print the content of the JTextArea
        try
        {
            outJTextArea.print();
        }
        catch (PrinterException e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_printJMenuItemActionPerformed

    private void printJMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printJMenuItem1ActionPerformed
        // TODO add your handling code here:
        //print gui
        PrintUtilities.printComponent(this);
    }//GEN-LAST:event_printJMenuItem1ActionPerformed

    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
        // TODO add your handling code here:
        //save the content of the JTextArea
        try
        {
            FileWriter fwriter = new FileWriter("src/Dental/Invoice.txt", true);
            PrintWriter outputFile = new PrintWriter(fwriter);
            
            //write the name and bi8ll to the file
            //outputFile.println(display.toString());
            outputFile.println(outJTextArea.getText());
            outputFile.close();
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveJButtonActionPerformed

    private void cleaningJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleaningJCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cleaningJCheckBoxActionPerformed

    private void fluorideJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fluorideJCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fluorideJCheckBoxActionPerformed

    private void rootJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootJCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rootJCheckBoxActionPerformed

    private void otherJCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherJCheckBoxActionPerformed
        // TODO add your handling code here:
        if (otherJCheckBox.isSelected()){
            otherJTextField.setEditable(true);
        }
        
        if(!otherJCheckBox.isSelected()){
                otherJTextField.setText(null);
                otherJTextField.setEditable(false);
            }
    }//GEN-LAST:event_otherJCheckBoxActionPerformed

    private void totalJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalJTextFieldActionPerformed

    private void quitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitJMenuItemActionPerformed
        // this quit the program
        System.exit(0);
        
    }//GEN-LAST:event_quitJMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DentalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DentalGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutJMenuItem1;
    private javax.swing.JButton calculateJButton;
    private javax.swing.JCheckBox cavityJCheckBox;
    private javax.swing.JLabel cavityJLabel;
    private javax.swing.JCheckBox cleaningJCheckBox;
    private javax.swing.JLabel cleaningJLabel;
    private javax.swing.JButton clearJButton;
    private javax.swing.JMenuItem clearJMenuItem;
    private javax.swing.JPanel controlJPanel;
    private javax.swing.JPanel displayJPanel;
    private javax.swing.JScrollPane displayJScrollPane;
    private javax.swing.JMenu fileJMenu;
    private javax.swing.JPopupMenu.Separator fileJSeparator;
    private javax.swing.JCheckBox fluorideJCheckBox;
    private javax.swing.JLabel fluorideJLabel;
    private javax.swing.JMenu helpJMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JCheckBox otherJCheckBox;
    private javax.swing.JTextField otherJTextField;
    private javax.swing.JTextArea outJTextArea;
    private javax.swing.JComboBox patientJComboBox;
    private javax.swing.JLabel patientJLabel;
    private javax.swing.JPanel patientJPanel;
    private javax.swing.JMenuItem printJMenuItem;
    private javax.swing.JMenuItem printJMenuItem1;
    private javax.swing.JButton quitJButton;
    private javax.swing.JMenuItem quitJMenuItem;
    private javax.swing.JCheckBox rootJCheckBox;
    private javax.swing.JLabel rootJLabel;
    private javax.swing.JButton saveJButton;
    private javax.swing.JPanel servicesJPanel;
    private javax.swing.JLabel totalJLabel;
    private javax.swing.JTextField totalJTextField;
    private javax.swing.JCheckBox xrayJCheckBox;
    private javax.swing.JLabel xrayJLabel;
    // End of variables declaration//GEN-END:variables
}
